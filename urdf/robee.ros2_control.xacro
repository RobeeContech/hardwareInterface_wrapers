<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

    <xacro:macro name="robee_ros2_control" params="name initial_positions_file use_fake_hardware:=true sim_ignition:=false">
        <xacro:property name="initial_positions" value="${xacro.load_yaml(initial_positions_file)['initial_positions']}"/>

        <ros2_control name="${name}" type="system">
            <hardware>
                <xacro:if value="${sim_ignition}">
                  <plugin>ign_ros2_control/IgnitionSystem</plugin>
                </xacro:if>
                <xacro:if value="${use_fake_hardware}">
                  <plugin>fake_components/GenericSystem</plugin>
                </xacro:if>
                <xacro:unless value="${use_fake_hardware or sim_ignition}">
                   <plugin>robee_hardware_interface/Robee_HardwareInterface</plugin>
                </xacro:unless>
            </hardware>
            <joint name="joint1">
                <command_interface name="position"/>
                <state_interface name="position">
                  <param name="initial_value">${initial_positions['joint1']}</param>
                </state_interface>
                <state_interface name="velocity"/>
                <state_interface name="effort"/>
            </joint>
            <joint name="joint2">
                <command_interface name="position"/>
                <state_interface name="position">
                  <param name="initial_value">${initial_positions['joint2']}</param>
                </state_interface>
                <state_interface name="velocity"/>
                <state_interface name="effort"/>
            </joint>
            <joint name="joint_z">
                <command_interface name="position"/>
                <state_interface name="position">
                  <param name="initial_value">${initial_positions['joint_z']}</param>
                </state_interface>
                <state_interface name="velocity"/>
                <state_interface name="effort"/>
            </joint>
            <joint name="joint_z_rot">
                <command_interface name="position"/>
                <state_interface name="position">
                  <param name="initial_value">${initial_positions['joint_z_rot']}</param>
                </state_interface>
                <state_interface name="velocity"/>
                <state_interface name="effort"/>
            </joint>
            <joint name="joint_y_rot">
                <command_interface name="position"/>
                <state_interface name="position">
                  <param name="initial_value">${initial_positions['joint_y_rot']}</param>
                </state_interface>
                <state_interface name="velocity"/>
                <state_interface name="effort"/>
            </joint>
            <joint name="joint_x_rot">
                <command_interface name="position"/>
                <state_interface name="position">
                  <param name="initial_value">${initial_positions['joint_x_rot']}</param>
                </state_interface>
                <state_interface name="velocity"/>
                <state_interface name="effort"/>
            </joint>
            <joint name="joint_ptr">
                <command_interface name="position"/>
                <state_interface name="position">
                  <param name="initial_value">${initial_positions['joint_ptr']}</param>
                </state_interface>
                <state_interface name="velocity"/>
                <state_interface name="effort"/>
            </joint>


            <xacro:unless value="${sim_ignition}">

                <sensor name="inclinometer_sensor">
                  <state_interface name="rotation.x" />
                  <state_interface name="rotation.y" />
                  <state_interface name="inclinometer_on" />
                  <command_interface name="inclinometer_on_cmd" />
                </sensor>


                <gpio name="tilt_control">
                  <state_interface name="tilt_control_mode_x" />
                  <state_interface name="tilt_control_mode_y" />
                  <command_interface name="tilt_control_mode_x_cmd" />
                  <command_interface name="tilt_control_mode_y_cmd" />
                </gpio>

        
                <gpio name="vacuum_end_effector">
                  <state_interface name="pressure" />
                  <state_interface name="vacuum_pump_on" />
                  <state_interface name="vacuum_valve_open" />
                  <command_interface name="vacuum_pump_on_cmd" />
                  <command_interface name="vacuum_valve_open_cmd" />
                </gpio>


                <sensor name="profiler_sensor">
                  <state_interface name="profiler_on" />
                  <state_interface name="profiler_mode" />
                  <state_interface name="profiler_data_0" />
                  <state_interface name="profiler_data_1" />
                  <state_interface name="profiler_data_2" />
                  <state_interface name="profiler_data_3" />
                  <state_interface name="profiler_data_4" />
                  <state_interface name="profiler_data_5" />
                  <state_interface name="profiler_data_6" />
                  <state_interface name="profiler_data_7" />
                  <state_interface name="profiler_data_8" />
                  <state_interface name="profiler_data_9" />
                  <state_interface name="profiler_data_10" />
                  <state_interface name="profiler_data_11" />
                  <state_interface name="profiler_data_12" />
                  <state_interface name="profiler_data_13" />
                  <command_interface name="profiler_on_cmd" />
                  <command_interface name="profiler_mode_cmd" />
                </sensor>

        
                <gpio name="glue_end_effector">
                  <state_interface name="flow_rate" />
                  <state_interface name="dispenser_on_state" />
                  <command_interface name="flow_rate_cmd" />
                  <command_interface name="dispense_on_cmd" />
                </gpio>


                <transmission name="transmission_scara">
                  <plugin>transmission_interface/ScaraTransmission</plugin>
                  <actuator name="actuator_z" role="actuator_z">
                  </actuator>
                  <actuator name="actuator_z_rot" role="actuator_z_rot">
                  </actuator>
                  <joint name="joint_z" role="joint_z">
                    <offset>0.01236057350368102</offset>
                    <mechanical_reduction>251.3274122872</mechanical_reduction>
                  </joint>
                  <joint name="joint_z_rot" role="joint_z_rot">
                    <offset>0</offset>
                    <mechanical_reduction>1.0</mechanical_reduction>
                  </joint>
                </transmission>
                 <transmission name="transmission_joint1">
                  <plugin>transmission_interface/BasicTransmission</plugin>
                  <joint name="joint1" role="joint1">
                    <mechanical_reduction>1.0</mechanical_reduction>
                    <offset>0</offset>
                  </joint>
                </transmission>
                 <transmission name="transmission_joint2">
                  <plugin>transmission_interface/BasicTransmission</plugin>
                  <joint name="joint2" role="joint2">
                    <mechanical_reduction>1.0</mechanical_reduction>
                    <offset>0</offset>
                  </joint>
                </transmission>
                 <transmission name="transmission_y_rot">
                  <plugin>transmission_interface/BasicTransmission</plugin>
                  <joint name="joint_y_rot" role="joint_y_rot">
                    <mechanical_reduction>1.0</mechanical_reduction>
                    <offset>0</offset>
                  </joint>
                </transmission>
                 <transmission name="transmission_x_rot">
                  <plugin>transmission_interface/BasicTransmission</plugin>
                  <joint name="joint_x_rot" role="joint_x_rot">
                    <mechanical_reduction>1.0</mechanical_reduction>
                    <offset>0</offset>
                  </joint>
                </transmission>
                <transmission name="transmission_ptr">
                  <plugin>transmission_interface/BasicTransmission</plugin>
                  <joint name="joint_ptr" role="joint_ptr">
                    <mechanical_reduction>1.0</mechanical_reduction>
                    <offset>0</offset>
                  </joint>
                </transmission>

            </xacro:unless>
        </ros2_control>
    </xacro:macro>
</robot>
